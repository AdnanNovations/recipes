name: Build GoFiber Recipes

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - "**.md"

jobs:
  builds:
    strategy:
      matrix:
        go-version:
          - oldstable
          - stable
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history so diffs can be performed

      - name: Find go.sum files
        id: find_gosum
        run: |
          go_sum_files=$(find . -name go.sum | tr '\n' ',')
          # Remove trailing comma
          go_sum_files=${go_sum_files%,}
          # Set output
          echo "gosum_files=$go_sum_files" >> $GITHUB_ENV

      - name: Setup Go with Module Caching
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: ${{ env.gosum_files }}

      - name: Get directories to check
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Check all directories for pushes to master/main
            dirs=$(find . -name go.mod -exec dirname {} \; | xargs)
          else
            # Check only changed directories for pull requests
            files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
            if [ -n "$files" ]; then
              dirs=$(echo "$files" | xargs -n 1 dirname | sort -u)
            fi
          fi
          echo "dirs<<EOF" >> $GITHUB_ENV
          echo "$dirs" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Run go vet for selected directories
        shell: bash
        run: |
          if [ -n "${{ env.dirs }}" ]; then
            echo "${{ env.dirs }}" | xargs -n 1 -P 4 bash -c 'echo "Running go vet in $0"; if [ -f "$0/go.mod" ]; then (cd $0; go vet ./...); fi'
          fi

      - name: Run go build for selected directories
        shell: bash
        run: |
          if [ -n "${{ env.dirs }}" ]; then
            echo "${{ env.dirs }}" | xargs -n 1 -P 4 bash -c 'echo "Running go build in $0"; if [ -f "$0/go.mod" ]; then (cd $0; go build ./...); fi'
          fi
